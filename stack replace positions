# Definition for singly-linked list.
# class ListNode:
#     def __init__(self, val=0, next=None):
#         self.val = val
#         self.next = next
class Solution:
    def reverseBetween(self, head: Optional[ListNode], left: int, right: int) -> Optional[ListNode]:
        stack=[]
        nodes=[]
        c=0
        ptr=head
        while ptr!=None:
            c=c+1
            if c>=left and c<=right:
                stack.append(ptr.val)
                nodes.append(ptr)
            ptr=ptr.next
        for node in nodes:
            node.val=stack.pop()
        return head
output:
1 2 3 4 5
5 4 3 2 1
