# Definition for singly-linked list.
# class ListNode:
#     def __init__(self, val=0, next=None):
#         self.val = val
#         self.next = next
class Solution:
    def reverseList(self, head: Optional[ListNode]) -> Optional[ListNode]:
        stack=[]
        while head!=None:
            stack.append(head.val)
            head=head.next
        result=ListNode(0)
        top=result
        while stack:
            n=ListNode(stack.pop())
            top.next=n
            top=n
        return result.next
output:
1 2 3 4 5 6
6 5 4 3 2 1
